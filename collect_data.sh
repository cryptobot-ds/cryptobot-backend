#!/bin/bash

# Obtenir le r√©pertoire du script et changer vers ce r√©pertoire
SCRIPT_DIR=$(dirname "$(readlink -f "$0")")
cd "$SCRIPT_DIR" || {
    echo "‚ùå Erreur : Impossible de changer vers le r√©pertoire du script."
    exit 1
}

# Cr√©er l‚Äôenvironnement virtuel s‚Äôil n‚Äôexiste pas
if [ ! -d ".venv" ]; then
    echo "üîß Environnement virtuel non trouv√©, cr√©ation en cours..."
    python3 -m venv .venv || {
        echo "‚ùå Erreur : Impossible de cr√©er l‚Äôenvironnement virtuel."
        exit 1
    }
fi

# Activer l‚Äôenvironnement virtuel
source .venv/bin/activate || {
    echo "‚ùå Erreur : Impossible d'activer l'environnement virtuel."
    exit 1
}

# Installation des d√©pendances
pip3 install -r requirements.txt

# √âtape 1 - Lancer le bot
python bot.py
if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors de l'ex√©cution de bot.py. Archivage et pr√©diction annul√©s."
    read -p "Appuyez sur Entr√©e pour continuer..."
    exit 1
fi

# √âtape 2 - Archivage
python archive_and_clean.py
if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors de l'archivage."
    read -p "Appuyez sur Entr√©e pour continuer..."
fi

# √âtape 3 - G√©n√©ration des features (SMA, MACD, F&G, etc.)
python generate_features.py
if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors de la g√©n√©ration des features."
    read -p "Appuyez sur Entr√©e pour continuer..."
    exit 1
fi

# √âtape 4 - V√©rification de la base de donn√©es
cd bdd || {
    echo "‚ùå Erreur : R√©pertoire bdd introuvable."
    exit 1
}
python check_db.py
if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors du check de la bdd."
    read -p "Appuyez sur Entr√©e pour continuer..."
fi
